name: Generate Addons XML and MD5

on:
  push:
    branches:
      - master

jobs:
  generate:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout do repositório
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Step 2: Configurar o ambiente Python
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      # Step 3: Atualizar pip e instalar dependências, se necessário
      - name: Upgrade pip and Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt || echo "No requirements.txt file"

      # Step 4: Rodar o script Python para gerar os arquivos
      - name: Run Addons Generator Script
        run: |
          python _repo_generator.py

      # Step 5: Verificar se os arquivos addons.xml e addons.xml.md5 foram criados
      - name: Verify Generated Files
        run: |
          if [ -f "zips/addons.xml" ] && [ -f "zips/addons.xml.md5" ]; then
            echo "Arquivos addons.xml e addons.xml.md5 gerados com sucesso!"
          else
            echo "Falha na geração dos arquivos addons.xml ou addons.xml.md5."
            exit 1
          fi

      # Step 6: Commit e push dos arquivos gerados
      - name: Commit and Push Changes
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "noreply@github.com"
          git add zips/addons.xml zips/addons.xml.md5
          git commit -m "Auto-update addons.xml and addons.xml.md5"
          git push

  configure-pages:
    runs-on: ubuntu-latest
    needs: generate

    steps:
      - name: Configure GitHub Pages
        run: |
          curl -X PUT -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/${{ github.repository }}/pages \
            -d '{"source":{"branch":"master","path":"/"}}'
