name: Generate Addons XML

on:
  push:
    branches:
      - master

jobs:
  generate:
    runs-on: ubuntu-latest

    steps:
      # Clona o repositório e submódulos (se existirem)
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Configura Python 3.10
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      # Atualiza o pip
      - name: Upgrade pip
        run: python -m pip install --upgrade pip

      # Instala dependências (caso seu script precise de alguma)
      - name: Install Dependencies
        run: pip install -r requirements.txt || echo "No dependencies required"

      # Executa o script `_repo_generator.py`
      - name: Run Repo Generator Script
        run: python _repo_generator.py

      # Verifica se os arquivos foram gerados
      - name: Verify files were created
        run: |
          ls -l addons.xml addons.xml.md5
          
      # Commit e push das mudanças, se os arquivos foram criados
      - name: Commit and Push Changes
        run: |
          if [ -f "addons.xml" ] && [ -f "addons.xml.md5" ]; then
            git config --global user.name "GitHub Actions"
            git config --global user.email "noreply@github.com"
            git add addons.xml addons.xml.md5
            git commit -m "Auto-update addons.xml and addons.xml.md5"
            git push
          else
            echo "Nenhum arquivo addons.xml ou addons.xml.md5 foi criado. Não será feito commit."
            exit 1
          fi

  configure-pages:
    runs-on: ubuntu-latest
    needs: generate

    steps:
      # Configura GitHub Pages para usar o diretório raiz
      - name: Configure GitHub Pages
        run: |
          curl -X PUT -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/${{ github.repository }}/pages \
            -d '{"source":{"branch":"master","path":"/"}}'
